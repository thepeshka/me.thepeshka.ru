# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build
        id: build
        run: |
          yarn
          CI=false yarn build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
        if: steps.build.conclusion == 'success'

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Deploy to thepeshka.github.io
        env:
          changes: build
          repository: git@github.com:thepeshka/thepeshka.github.io.git
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: thepeshka
          email: ilya@thepeshka.ru
          message: https://github.com/thepeshka/me.thepeshka.ru/commit/${{ github.sha }}
        run: |
          set -ex
          echo $ssh_key | ssh-add
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          git clone --depth=1 $repository ./repo
          git add -A
          git commit -m "$message"
          git push

      - name: Deploy to thepeshka.ru
        uses: easingthemes/ssh-deploy@v5.1.1
        env:
          SOURCE: "build/"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
